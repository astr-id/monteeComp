@using System.ComponentModel.DataAnnotations
@inject HttpClient http

<h1>Modifier une voiture</h1>

<CascadingValue Value="this.editContext">
    <editForm Model="@voiture">
    <DataAnnotationsValidator />
        <ValidationSummary />
    <p>
        <label>
            Marque :
        </label>
            <InputText @bind-Value="voiture.Marque" />
    </p>
    <p>
        <label>
            Couleur :
        </label>
            <InputText @bind-Value="voiture.Couleur" />
    </p>

    <p>
        <label>
            Poids :
        </label>
            <InputNumber @bind-Value="voiture.Poids" />
    </p>

        <button type="submit" @onclick="HandleValidSubmit">Valider</button>

</editForm>

</CascadingValue>

<p>@message</p>

@code {
    private Voiture voiture = new();
    private string message;

    private EditContext editContext;


    protected override async Task OnInitializedAsync()
    {
        var voiture = await http.GetFromJsonAsync<Voiture>("https://localhost:44371/api/Voiture/voitures/{Id}");
        editContext = new(voiture);
    }

    private async Task HandleValidSubmit()
    {
        if (editContext.Validate())
        {
            var result = await http.PutAsJsonAsync<Voiture>("https://localhost:44371/api/Voiture/voitures/{Id}", voiture);
            message = "Voiture modifiée";
        }
        else
        {
            message = "La voiture ne peut pas être modifiée";
        }
    }

    public class Voiture
    {
        [Required]
        [MaxLength(15, ErrorMessage = "Entrez 15 characteres maximum")]
       public string Marque { get; set; }

        [Required]
        [MaxLength(15, ErrorMessage = "Entrez 15 characteres maximum")]
       public string Couleur { get; set; }

       [Required]
        [Range(900, 1400, ErrorMessage = "Entrez un chiffre entre 900 et 1400")]
       public int Poids { get; set; }
    }

}

